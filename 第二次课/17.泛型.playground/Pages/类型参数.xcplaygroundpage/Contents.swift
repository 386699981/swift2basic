//: 类型参数: 上述例子中的占位符, 作为取代类型的参数使用.    
//:  - 类型参数紧跟函数名之后,用尖括号包含,如: <类型占位符>.
//:  - 一旦定义了类型参数, 即可用作定义参数类型/函数返回类型/函数体中做类型标识.
//:  - 无论何时函数被调用时, 类型参数就被实际的类型取代. 可以定义任何多类型参数, <占位符1,占位符2,..>
//:  - 命名：尽量顾名思义. 比如 Dictionary<Key, Value> , Array<Element>. 如无明显关联, 可用如T、U、V等替代.

func printAny<T>(array: [T]) {
    for element in array {
        print(element)
    }
}

//: [>](@next)
